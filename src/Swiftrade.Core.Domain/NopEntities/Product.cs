// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Swiftrade.Core.Domain.Entities.Common;
using Swiftrade.Core.Domain.Interfaces;
using Swiftrade.Core.Domain.Localization;
using Swiftrade.Core.Domain.NopEntities;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;

namespace Swiftrade.Core.Domain.Entities
{
    public partial class Product : BaseEntity<int>, ILocalizedEntity, ISlugSupported, IAclSupported, IStoreMappingSupported, /*IDiscountSupported<DiscountProductMapping>*/ ISoftDeletedEntity
    {
        public Product()
        {
            Backinstocksubscription = new HashSet<Backinstocksubscription>();
            Orderitem = new HashSet<Orderitem>();
            ProductCategoryMapping = new HashSet<ProductCategory>();
            ProductManufacturerMapping = new HashSet<ProductManufacturerMapping>();
            ProductPictureMapping = new HashSet<ProductPictureMapping>();
            ProductProductattributeMapping = new HashSet<ProductProductattributeMapping>();
            ProductSpecificationattributeMapping = new HashSet<ProductSpecificationattributeMapping>();
            ProductProductTagMapping = new HashSet<ProductProducttagMapping>();
            Productattributecombination = new HashSet<ProductAttributeCombination>();
            Productreview = new HashSet<Productreview>();
            Productwarehouseinventory = new HashSet<Productwarehouseinventory>();
            Shoppingcartitem = new HashSet<Shoppingcartitem>();
            Stockquantityhistory = new HashSet<Stockquantityhistory>();
            Tierprice = new HashSet<Tierprice>();
            Discount = new HashSet<Discount>();
            ProductTag = new HashSet<ProductTag>();
        }

        public string Name { get; set; }
        public string MetaKeywords { get; set; }
        public string MetaTitle { get; set; }
        public string Sku { get; set; }
        public string ManufacturerPartNumber { get; set; }
        public string Gtin { get; set; }
        public string RequiredProductIds { get; set; }
        public string AllowedQuantities { get; set; }
        public int ProductTypeId { get; set; }
        //public Swiftrade.Core.Domain.Enumerations.ProductType ProductType
        //{
        //    get => (Swiftrade.Core.Domain.Enumerations.ProductType)ProductTypeId;
        //    set => ProductTypeId = (int)value;
        //}
        public int ParentGroupedProductId { get; set; }
        public bool VisibleIndividually { get; set; }
        public string ShortDescription { get; set; }
        public string FullDescription { get; set; }
        public string AdminComment { get; set; }
        public int ProductTemplateId { get; set; }
        public int VendorId { get; set; }
        public bool ShowOnHomepage { get; set; }
        public string MetaDescription { get; set; }
        public bool AllowCustomerReviews { get; set; }
        public int ApprovedRatingSum { get; set; }
        public int NotApprovedRatingSum { get; set; }
        public int ApprovedTotalReviews { get; set; }
        public int NotApprovedTotalReviews { get; set; }
        public bool SubjectToAcl { get; set; }
        public bool LimitedToStores { get; set; }
        public bool IsGiftCard { get; set; }
        public int GiftCardTypeId { get; set; }
        public decimal? OverriddenGiftCardAmount { get; set; }
        public bool RequireOtherProducts { get; set; }
        public bool AutomaticallyAddRequiredProducts { get; set; }
        public bool IsDownload { get; set; }
        public int DownloadId { get; set; }
        public bool UnlimitedDownloads { get; set; }
        public int MaxNumberOfDownloads { get; set; }
        public int? DownloadExpirationDays { get; set; }
        public int DownloadActivationTypeId { get; set; }
        public bool HasSampleDownload { get; set; }
        public int SampleDownloadId { get; set; }
        public bool HasUserAgreement { get; set; }
        public string UserAgreementText { get; set; }
        public bool IsRecurring { get; set; }
        public int RecurringCycleLength { get; set; }
        public int RecurringCyclePeriodId { get; set; }
        public int RecurringTotalCycles { get; set; }
        public bool IsRental { get; set; }
        public int RentalPriceLength { get; set; }
        public int RentalPricePeriodId { get; set; }
        public bool IsShipEnabled { get; set; }
        public bool IsFreeShipping { get; set; }
        public bool ShipSeparately { get; set; }
        public decimal AdditionalShippingCharge { get; set; }
        public int DeliveryDateId { get; set; }
        public bool IsTaxExempt { get; set; }
        public int TaxCategoryId { get; set; }
        public bool IsTelecommunicationsOrBroadcastingOrElectronicServices { get; set; }
        public int ManageInventoryMethodId { get; set; }
        public int ProductAvailabilityRangeId { get; set; }
        public bool UseMultipleWarehouses { get; set; }
        public int WarehouseId { get; set; }
        public int StockQuantity { get; set; }
        public bool DisplayStockAvailability { get; set; }
        public bool DisplayStockQuantity { get; set; }
        public int MinStockQuantity { get; set; }
        public int LowStockActivityId { get; set; }
        public int NotifyAdminForQuantityBelow { get; set; }
        public int BackorderModeId { get; set; }
        public bool AllowBackInStockSubscriptions { get; set; }
        public int OrderMinimumQuantity { get; set; }
        public int OrderMaximumQuantity { get; set; }
        public bool AllowAddingOnlyExistingAttributeCombinations { get; set; }
        public bool NotReturnable { get; set; }
        public bool DisableBuyButton { get; set; }
        public bool DisableWishlistButton { get; set; }
        public bool AvailableForPreOrder { get; set; }
        public DateTime? PreOrderAvailabilityStartDateTimeUtc { get; set; }
        public bool CallForPrice { get; set; }
        public decimal Price { get; set; }
        public decimal OldPrice { get; set; }
        public decimal ProductCost { get; set; }
        public bool CustomerEntersPrice { get; set; }
        public decimal MinimumCustomerEnteredPrice { get; set; }
        public decimal MaximumCustomerEnteredPrice { get; set; }
        public bool BasepriceEnabled { get; set; }
        public decimal BasepriceAmount { get; set; }
        public int BasepriceUnitId { get; set; }
        public decimal BasepriceBaseAmount { get; set; }
        public int BasepriceBaseUnitId { get; set; }
        public bool MarkAsNew { get; set; }
        public DateTime? MarkAsNewStartDateTimeUtc { get; set; }
        public DateTime? MarkAsNewEndDateTimeUtc { get; set; }
        public bool HasTierPrices { get; set; }
        public bool HasDiscountsApplied { get; set; }
        public decimal Weight { get; set; }
        public decimal Length { get; set; }
        public decimal Width { get; set; }
        public decimal Height { get; set; }
        public DateTime? AvailableStartDateTimeUtc { get; set; }
        public DateTime? AvailableEndDateTimeUtc { get; set; }
        public int DisplayOrder { get; set; }
        public bool Published { get; set; }
        public bool Deleted { get; set; }
        public DateTime CreatedOnUtc { get; set; }
        public DateTime UpdatedOnUtc { get; set; }

        /// <summary>
        /// Gets or sets the product type
        /// </summary>
        [NotMapped]

        public ProductType ProductType
        {
            get => (ProductType)ProductTypeId;
            set => ProductTypeId = (int)value;
        }

        /// <summary>
        /// Gets or sets the backorder mode
        /// </summary>
      
        [NotMapped]
        public BackorderMode BackorderMode
        {
            get => (BackorderMode)BackorderModeId;
            set => BackorderModeId = (int)value;
        }

        /// <summary>
        /// Gets or sets the download activation type
        /// </summary>
        [NotMapped]

        public DownloadActivationType DownloadActivationType
        {
            get => (DownloadActivationType)DownloadActivationTypeId;
            set => DownloadActivationTypeId = (int)value;
        }

        /// <summary>
        /// Gets or sets the gift card type
        /// </summary>
        [NotMapped]

        public GiftCardType GiftCardType
        {
            get => (GiftCardType)GiftCardTypeId;
            set => GiftCardTypeId = (int)value;
        }

        /// <summary>
        /// Gets or sets the low stock activity
        /// </summary>
        [NotMapped]

        public LowStockActivity LowStockActivity
        {
            get => (LowStockActivity)LowStockActivityId;
            set => LowStockActivityId = (int)value;
        }

        /// <summary>
        /// Gets or sets the value indicating how to manage inventory
        /// </summary>
        [NotMapped]

        public ManageInventoryMethod ManageInventoryMethod
        {
            get => (ManageInventoryMethod)ManageInventoryMethodId;
            set => ManageInventoryMethodId = (int)value;
        }

        /// <summary>
        /// Gets or sets the cycle period for recurring products
        /// </summary>
        [NotMapped]

        public RecurringProductCyclePeriod RecurringCyclePeriod
        {
            get => (RecurringProductCyclePeriod)RecurringCyclePeriodId;
            set => RecurringCyclePeriodId = (int)value;
        }

        /// <summary>
        /// Gets or sets the period for rental products
        /// </summary>
        [NotMapped]
        public RentalPricePeriod RentalPricePeriod
        {
            get => (RentalPricePeriod)RentalPricePeriodId;
            set => RentalPricePeriodId = (int)value;
        }


        public virtual ICollection<Backinstocksubscription> Backinstocksubscription { get; set; }
        public virtual ICollection<Orderitem> Orderitem { get; set; }
        public virtual ICollection<ProductCategory> ProductCategoryMapping { get; set; }
        public virtual ICollection<ProductManufacturerMapping> ProductManufacturerMapping { get; set; }
        public virtual ICollection<ProductPictureMapping> ProductPictureMapping { get; set; }
        public virtual ICollection<ProductProductattributeMapping> ProductProductattributeMapping { get; set; }
        public virtual ICollection<ProductSpecificationattributeMapping> ProductSpecificationattributeMapping { get; set; }
        public virtual ICollection<ProductProducttagMapping> ProductProductTagMapping { get; set; }
        public virtual ICollection<ProductAttributeCombination> Productattributecombination { get; set; }
        public virtual ICollection<Productreview> Productreview { get; set; }
        public virtual ICollection<Productwarehouseinventory> Productwarehouseinventory { get; set; }
        public virtual ICollection<Shoppingcartitem> Shoppingcartitem { get; set; }
        public virtual ICollection<Stockquantityhistory> Stockquantityhistory { get; set; }
        public virtual ICollection<Tierprice> Tierprice { get; set; }

        public virtual ICollection<Discount> Discount { get; set; }
        public virtual ICollection<ProductTag> ProductTag { get; set; }
    }
}